% which section, if worth keeping?
% It is also worth noting that with respect to our earlier comparative analysis
% of PLs and NLs [cite earlier section], there has been work comparing things like
% numeracy, natural language acquisition skills, and programming language skills
% \cite{prat2020relating}.  This account offers evidence that PL and NL acquisition
% in humans who have no experience coding 
% and it is claimed that the study ``are consistent with previous research
% reporting higher or unique predictive utility of verbal aptitude tests when
% compared to mathematical one" with respect to learning Python.

% However, as Python is unityped, and similar experiments with a typed programming
% language would perhaps be more relevant - especially for studying mathematical
% abilities more consistent with the mathematicians notion of mathematics, rather
% than just numeracy. Additionally, it would be interesting to explore the role of
% PL syntax in such studies - and if what kind of variation could be linked to the

 
% Andreasp comment about the proof state/terms being desugared in every known PL -
% % ask a question of how one can make the interactivity more amenable to a kind of
% mathematical oracle, and therefore give semantic, not just syntactic goal states
% (i.e help allow the programmer to reason semantically)

% Future work could model GF in Agda, which would allow one to prove metatheorems
% about GF like soundness and termination, or perhaps statements about specific
% grammars, such as one being unambiguous.

% move to conclusion
% However, as a counterexample to the Agda developer's mentality, the so-called
% \emph{Brunerie Number}, a computation about the homotopy groups of spheres,
% doesn't terminate in Agda but can be computed with pen and paper, offers a
% counterexample even the computer scientist has to come to terms with
% \cite{brunerie2016homotopy}. It is sufficiently precise, but nonetheless poses a
% practical issue to formal systems where, until it terminates, offers presumably
% correct code which doesn't match the mathematicians linguistic proof. And while
% this one example which may see resolution, many further counterexample may
% abound. It is a speculative matter to guess which mathematics is formalizable.


